name: PHP Unit Tests

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  issues: write
  pull-requests: write
  checks: write  # Required for test reporting

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP 8.1
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: cli, common, curl, mbstring, xml, zip
        tools: composer:v2
        coverage: xdebug
        ini-values: memory_limit=2G
    
    - name: Validate composer files
      run: composer validate --strict
    
    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    
    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    
    - name: Install dependencies
      run: composer install --no-interaction --no-ansi --prefer-dist --optimize-autoloader
    
    - name: Create test outputs directory
      run: mkdir -p test_outputs/coverage
    
    - name: Check PHP syntax
      run: find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;
    
    # Run PHP CodeSniffer
    - name: Run PHP CodeSniffer
      run: |
        if [ -f vendor/bin/phpcs ]; then
          vendor/bin/phpcs --report=checkstyle --report-file=test_outputs/phpcs-checkstyle.xml src/ tests/ || true
          vendor/bin/phpcs src/ tests/ || true
        else
          echo "PHP CodeSniffer not found. Skipping."
        fi
      continue-on-error: true
    
    # Run PHPStan
    - name: Run PHPStan
      run: |
        if [ -f vendor/bin/phpstan ]; then
          if [ -f phpstan.neon ] || [ -f phpstan.neon.dist ]; then
            vendor/bin/phpstan analyse --memory-limit=2G --error-format=github
          else
            vendor/bin/phpstan analyse src/ tests/ --level=5 --memory-limit=2G --error-format=github
          fi
        else
          echo "PHPStan not found. Skipping."
        fi
      continue-on-error: true
    
    # Run PHPUnit tests
    - name: Run PHPUnit tests
      run: |
        if [ -f vendor/bin/phpunit ]; then
          XDEBUG_MODE=coverage vendor/bin/phpunit \
            --coverage-clover test_outputs/coverage/clover.xml \
            --coverage-html test_outputs/coverage/html \
            --log-junit test_outputs/phpunit.xml
        else
          echo "PHPUnit not found. Skipping."
        fi
    
    # Publish test results using dorny/test-reporter
    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: PHPUnit Tests
        path: test_outputs/phpunit.xml
        reporter: java-junit
        fail-on-error: false
    
    # Generate code coverage report
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      if: always()
      with:
        filename: test_outputs/coverage/clover.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    
    # Post PHPCS results as annotations
    - name: Annotate PHPCS Results
      uses: staabm/annotate-pull-request-from-checkstyle@v1
      if: always()
      with:
        files: test_outputs/phpcs-checkstyle.xml
        notices-as-warnings: true
    
    # Comment PR with comprehensive results
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
    
    # Upload detailed test artifacts
    - name: Upload test outputs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-outputs
        path: test_outputs/
        retention-days: 7
    
    # Upload coverage to Codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./test_outputs/coverage/clover.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
